{"version":3,"sources":["components/FeedbackOption/FeedbackOption.jsx","components/StatisticItem/StatisticItem.jsx","utils/options.js","components/Statistics/Statistics.jsx","components/App.jsx","index.jsx"],"names":["FeedbackOption","options","onLeaveFeedback","onClick","map","option","key","type","name","toUpperCase","StatisticItem","good","neutral","bad","total","posPersent","Object","freeze","GOOD","NEUTRAL","BAD","Statistic","state","hendleIncrement","target","setState","Number","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","values","Component","App","ReactDOM","render","document","getElementById"],"mappings":"gMAgBeA,EAbQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OAGrB,0BAAMC,QAASD,GACZD,EAAQG,KAAI,SAAAC,GAAM,OAAI,4BAAQC,IAAKD,EAAQE,KAAK,SAASC,KAAMH,GAASA,EAAOI,oBCgBrEC,EApBO,SAAC,GAAD,QAAGC,YAAH,MAAU,EAAV,MAAaC,eAAb,MAAuB,EAAvB,MAA0BC,WAA1B,MAAgC,EAAhC,MAAmCC,aAAnC,MAA2C,EAA3C,MAA8CC,kBAA9C,MAA2D,IAA3D,SACpB,oCACE,sCAAYJ,GACZ,yCAAeC,GACf,qCAAWC,GACX,uCAAaC,GACb,mDAAyBC,EAAzB,OCTWC,SAAOC,OAAO,CAC3BC,KAAM,OACNC,QAAS,UACTC,IAAK,QCIcC,E,2MAEnBC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,WAAY,K,EAGdQ,gBAAkB,YAAiB,IACzBf,EADwB,EAAbgB,OACXhB,KAER,EAAKiB,UAAS,SAAAH,GACZ,OAAO,eACJd,EAAOkB,OAAO,CAACJ,EAAMd,KAAU,MAGpC,EAAKmB,qBACL,EAAKC,mC,EAGPD,mBAAqB,WACnB,EAAKF,UAAS,YAA8B,MAAO,CAAEX,MAAX,EAAzBH,KAAyB,EAAnBC,QAAmB,EAAVC,S,EAGlCe,gCAAkC,WAChC,EAAKH,UAAS,YAAsB,IAAnBd,EAAkB,EAAlBA,KAAMG,EAAY,EAAZA,MACrB,MAAO,CAAEC,WAAYc,KAAKC,MAAQnB,EAAOG,EAAS,U,wEAI5C,IAAD,EAC2CiB,KAAKT,MAA/CX,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAAKC,EADrB,EACqBA,MAAOC,EAD5B,EAC4BA,WACnC,OACE,oCACE,qDACA,kBAAC,EAAD,CAAgBd,QAASe,OAAOgB,OAAO/B,GAAUC,gBAAiB6B,KAAKR,kBACvE,yCACW,IAAVT,EAAc,kBAAE,EAAF,CAAgBH,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAOA,EAAOC,WAAYA,IAAiB,uD,GAvCnFkB,aCExBC,EANH,kBACV,oCACE,kBAAC,EAAD,QCDJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.ad254978.chunk.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOption = ({ options, onLeaveFeedback }) => (\r\n\r\n\r\n  <form onClick={onLeaveFeedback}>\r\n    {options.map(option => <button key={option} type=\"button\" name={option}>{option.toUpperCase()}</button>)}\r\n  </form >\r\n)\r\n\r\nFeedbackOption.propTypes = {\r\n  option: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FeedbackOption;","import React from \"react\"\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StatisticItem = ({ good = 0, neutral = 0, bad = 0, total = 0, posPersent = 100 }) => (\r\n  <>\r\n    <div>Good: {good}</div>\r\n    <div>Neutral: {neutral}</div>\r\n    <div>Bad: {bad}</div>\r\n    <div>Total: {total}</div>\r\n    <div>Positive feedback: {posPersent}%</div>\r\n  </>\r\n)\r\n\r\nStatisticItem.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  posPersent: PropTypes.number\r\n}\r\n\r\n\r\n\r\nexport default StatisticItem","export default Object.freeze({\r\n  GOOD: \"good\",\r\n  NEUTRAL: \"neutral\",\r\n  BAD: \"bad\"\r\n});\r\n","import React, { Component } from \"react\"\r\nimport FeedbackOption from \"../FeedbackOption/FeedbackOption\"\r\nimport StatisticItem from \"../StatisticItem/StatisticItem\"\r\n\r\nimport options from \"../../utils/options\"\r\n\r\n\r\nexport default class Statistic extends Component {\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    posPersent: 100\r\n  };\r\n\r\n  hendleIncrement = ({ target }) => {\r\n    const { name } = target\r\n\r\n    this.setState(state => {\r\n      return {\r\n        [name]: Number([state[name]]) + 1\r\n      }\r\n    })\r\n    this.countTotalFeedback()\r\n    this.countPositiveFeedbackPercentage()\r\n  }\r\n\r\n  countTotalFeedback = () => {\r\n    this.setState(({ good, neutral, bad }) => { return { total: good + neutral + bad } })\r\n  }\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    this.setState(({ good, total }) => {\r\n      return { posPersent: Math.round(((good / total) * 100)) }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { good, neutral, bad, total, posPersent } = this.state\r\n    return (\r\n      <>\r\n        <h2>Pelase leave feedback</h2>\r\n        <FeedbackOption options={Object.values(options)} onLeaveFeedback={this.hendleIncrement} />\r\n        <h2>Statistic</h2>\r\n        {total !== 0 ? < StatisticItem good={good} neutral={neutral} bad={bad} total={total} posPersent={posPersent} /> : <div>No feedback fiven</div>}\r\n      </>\r\n    )\r\n  }\r\n}","import React from \"react\";\r\nimport Statistic from \"./Statistics/Statistics\";\r\n\r\nconst App = () => (\r\n  <>\r\n    <Statistic />\r\n  </>\r\n);\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}